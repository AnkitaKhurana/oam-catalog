# Run from project root with:
# `docker-compose -f test/docker-compose.yml up`

version: '2'
services:
  test-app:
    extends:
      service: app
      file: ../docker-compose.yml

    logging:
      options:
        max-size: "10k"

    environment:
      - INTEGRATION_TESTS=true
      - NODE_ENV=test

      # Variables that can be inherited from the host ENV. All
      # others will come from `.env`
      # Note that typically specifying these empty values would
      # override any values in .env, however, when developing
      # locally, the codebase is mounted from the host, including
      # the `.env` file, so the `dotenv` npm module takes responsibility
      # for loading these values.
      - OAM_DEBUG
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - FACEBOOK_APP_ID
      - FACEBOOK_APP_SECRET

    ports:
      - 4000:4000

    # Mounts the host code live into the container so you don't need
    # to rebuild the container everytime. Disable with APP_FROM=container
    volumes:
      - ../:/host-app

    # Defaults to using the live host code for the app.
    # Runs both foreman and a static file server for testing purposes.
    command: /bin/bash -c
      "[[ \"$APP_FROM\" != \"container\" ]] && cd /host-app;
       ./node_modules/.bin/http-server -p8080 ./test &
       ./node_modules/.bin/nf start"
